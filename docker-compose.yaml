services:
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: "pvs1909~"
      MSSQL_PID: "Developer"
    ports:
    - "1433:1433"
    networks:
      - app-network
    volumes:
      - sqlserver-data:/var/opt/mssql
    #   - ./sql:/sql                    
    #   - ./scripts:/scripts                    
    # command: ["/bin/bash", "/scripts/sql-server-migrate.sh"]

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"   
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: user    
      RABBITMQ_DEFAULT_PASS: pvs1909~   
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq 
    networks:
      - app-network

  redis:
    image: redis:latest
    volumes:
      - redis_data:/data
    networks:
      - app-network
    command: ["redis-server", "--requirepass", "pvs1909~"]

  mongo:
    image: mongo:latest
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: pvs1909~
    volumes:
      - mongo_data:/data/db
      - ./scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - app-network

  api-gateway:
    build:
      context: .
      dockerfile: Dockerfile
    command: ["/app/bin/api-gateway"]
    ports:
      - "5000:5000"
    networks:
      - app-network

  media-service:
    build:
      context: .
      dockerfile: Dockerfile
    entrypoint: ["/app/scripts/wait-for-mongo.sh", "/app/scripts/wait-for-rabbitmq.sh"]
    command: ["/app/bin/media"]
    depends_on:
      - mongo
      - rabbitmq
    networks:
      - app-network

  user-service:
    build:
      context: .
      dockerfile: Dockerfile
    entrypoint: ["/app/scripts/wait-for-rabbitmq.sh", "/app/scripts/wait-for-sqlserver.sh"]
    command: ["/app/bin/user"]
    depends_on:
      - sqlserver
      - redis
      - rabbitmq
    networks:
      - app-network

  product-service:
    build:
      context: .
      dockerfile: Dockerfile
    entrypoint: ["/app/scripts/wait-for-rabbitmq.sh", "/app/scripts/wait-for-sqlserver.sh"]
    command: ["/app/bin/product"]
    depends_on:
      - sqlserver
      - redis
      - rabbitmq
    networks:
      - app-network

volumes:
  mongo_data:
  sqlserver-data:
  redis_data:
  rabbitmq_data:

networks:
  app-network:
    driver: bridge